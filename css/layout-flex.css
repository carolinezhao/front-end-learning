.box,
.div,
button,
a,
img {
    border: 1px solid salmon;
}


/* 容器属性 */

.example1 {
    display: flex;
    /* flex-direction 决定主轴的方向（即项目的排列方向）
    row（默认值）：主轴为水平方向，起点在左端。
    row-reverse：主轴为水平方向，起点在右端。
    column：主轴为垂直方向，起点在上沿。
    column-reverse：主轴为垂直方向，起点在下沿。 */
    flex-direction: row;
    /* 如果一条轴线排不下，flex-wrap 决定如何换行。
    nowrap（默认值）：不换行。
    wrap：换行，第一行在上方。
    wrap-reverse：换行，第一行在下方。*/
    flex-wrap: wrap;
    /* 前两项的简写 */
    /* flex-flow: <flex-direction> || <flex-wrap>; */
    /* justify-content 项目在主轴上的对齐方式。 
    flex-start（默认值）：左对齐
    flex-end：右对齐
    center： 居中
    space-between：两端对齐，项目之间的间隔都相等。
    space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。 */
    justify-content: space-around;
    /* align-items 项目在交叉轴上如何对齐（非排列方向）。
    flex-start：交叉轴的起点对齐。
    flex-end：交叉轴的终点对齐。
    center：交叉轴的中点对齐。
    baseline: 项目的第一行文字的基线对齐。
    stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。 */
    align-items: center;
    /* align-content 多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。 */
    /* flex-start：与交叉轴的起点对齐。
    flex-end：与交叉轴的终点对齐。
    center：与交叉轴的中点对齐。
    space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。
    space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。
    stretch（默认值）：轴线占满整个交叉轴。 */
    align-content: space-between;
}

.example1 {
    height: 300px;
    width: 30%;
}

.div {
    width: 30%;
    height: 40%;
}

/* 项目属性 */
button {
    /* 定义项目的排列顺序。数值越小，排列越靠前，默认为0。 */
    order: 2;
    /* 定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。 
    如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。
    如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。*/
    flex-grow: 2;
    /* 定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。
    如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。
    如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。 */
    flex-shrink: 1;
    /* flex-basis
    flex
    align-self */
}