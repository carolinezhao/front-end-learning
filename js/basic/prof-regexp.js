// 5.4 RegExp 类型

// 基于以下语法创建正则表达式
// var expression = / pattern / flags ;
// 模式 (pattern)
// 标志 (flags)：用以标明正则表达式的行为。
// g: 全局 (global) 模式，应用于所有字符串，而非在发现第一个匹配项时立即停止; 
// i: 不区分大小写 (case-insensitive) 模式;
// m: 多行 (multiline) 模式，到达一行文本末尾时还会继续查找下一行。

// 元字符：( [ { \ ^ $ | ) ? * + .]}
// 元字符在正则表达式中都有一或多种特殊用途，如果想要匹配字符串中包含的这些字符，就必须对它们进行转义。

// 字面量形式
let ptn1 = /at/g; // 匹配所有"at";
let ptn2 = /.at/gi; // 匹配所有以"at"结尾的 3 个字符的组合，不区分大小写;
let ptn3 = /\.at/gi; // 匹配所有".at"，不区分大小写;
let ptn4 = /[bc]at/i; // 匹配第一个"bat"或"cat"，不区分大小写;
let ptn5 = /\[bc\]at/i; // 匹配第一个" [bc]at"，不区分大小写;

// RegExp 构造函数
// 两个参数，都是字符串：要匹配的字符串模式和可选的标志字符串。
