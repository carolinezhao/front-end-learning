/*
js 中的 new 操作符与其他[面向类]的语言中 new 的机制不同。

js 中的“构造函数”：只是一些使用 new 操作符时被调用的函数。
它们并不会属于某个类，也不会实例化一个类。
实际上，它们甚至都不能说是一种特殊的函数类型，它们只是被 new 操作符调用的普通函数而已。

包括内置对象函数 (比如 Number(..)) 在内的所有函数都可以用 new 来调用，这种函数调用被称为构造函数调用。
实际上并不存在所谓的“构造函数”，只有对于函数的“构造调用”。

使用 new 来调用函数，或者说发生构造函数调用时，会自动执行以下操作：
1.创建 (或构造) 一个全新的对象；
2.这个新对象会被执行[[原型]]连接 (后面章节的内容)；
3.这个新对象会绑定到函数调用的 this；
4.如果函数没有返回其他对象，那么 new 表达式中的函数调用会自动返回这个新对象。
*/

function foo(a) {
    this.a = a;
}

var bar = new foo(2);
console.log(bar.a) // 2

// new 绑定：使用 new 来调用 foo 时，会构造一个新对象并把它绑定到 foo 调用中的 this 上。

// more：this-new.js